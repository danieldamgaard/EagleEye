package dk.au.cs.eagleEye.main;

import dk.au.cs.eagleEye.tasks.Evaluation;
import dk.au.cs.eagleEye.tasks.FingerprintingKNN;
import dk.au.cs.eagleEye.tasks.FingerprintingNN;
import dk.au.cs.eagleEye.tasks.ModelNN;
import dk.au.cs.eagleEye.tasks.ModelKNN;
import dk.au.cs.eagleEye.tasks.Score;
import java.awt.FileDialog;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

public class EagleEye extends javax.swing.JFrame {

    /**
     * Creates new form EagleEye
     */
  private Master m;
    public EagleEye() {
        initComponents();
        
        setVisible(true);
        
        m = Master.Inst();
        
        m.setConsole(console);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    console = new javax.swing.JTextArea();
    jPanel2 = new javax.swing.JPanel();
    fingerprintingNN = new javax.swing.JButton();
    fingerprintingKNN = new javax.swing.JButton();
    jPanel3 = new javax.swing.JPanel();
    modelNN = new javax.swing.JButton();
    modelKNN = new javax.swing.JButton();
    waf = new javax.swing.JCheckBox();
    jPanel4 = new javax.swing.JPanel();
    jButton5 = new javax.swing.JButton();
    estimate = new javax.swing.JButton();
    jButton1 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();
    jPanel5 = new javax.swing.JPanel();
    distanceAlgorithmSelector = new javax.swing.JComboBox();
    jLabel1 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Console"));
    jPanel1.setName("jhg"); // NOI18N

    console.setColumns(20);
    console.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
    console.setRows(5);
    console.setName("console"); // NOI18N
    jScrollPane1.setViewportView(console);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane1)
        .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
        .addContainerGap())
    );

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Fingerprinting"));

    fingerprintingNN.setText("Nearest Neighbor (NN)");
    fingerprintingNN.setName("fingerprintingNN"); // NOI18N
    fingerprintingNN.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        fingerprintingNNActionPerformed(evt);
      }
    });

    fingerprintingKNN.setText("K Nearest Neighbor (KNN)");
    fingerprintingKNN.setName("fingerprintingKNN"); // NOI18N
    fingerprintingKNN.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        fingerprintingKNNActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(fingerprintingNN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(fingerprintingKNN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(fingerprintingNN)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(fingerprintingKNN)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Model based"));

    modelNN.setText("Nearest Neighbor (NN)");
    modelNN.setName("modelNN"); // NOI18N
    modelNN.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        modelNNActionPerformed(evt);
      }
    });

    modelKNN.setText("K Nearest Neighbor (KNN)");
    modelKNN.setName("modelNN"); // NOI18N
    modelKNN.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        modelKNNActionPerformed(evt);
      }
    });

    waf.setText("Wall Attenuation Factor (WAF)");
    waf.setName("waf"); // NOI18N

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(waf)
            .addGap(0, 0, Short.MAX_VALUE))
          .addComponent(modelNN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(modelKNN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(modelNN)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(modelKNN)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(waf)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Evaluation"));

    jButton5.setText("Cumulative error (Score)");
    jButton5.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton5ActionPerformed(evt);
      }
    });

    estimate.setText("Distance VS SS to APs");
    estimate.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        estimateActionPerformed(evt);
      }
    });

    jButton1.setText("CDF : Error");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    jButton2.setText("K VS Median");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton2ActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel4Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(estimate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    jPanel4Layout.setVerticalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel4Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jButton5)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(estimate)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jButton1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
        .addComponent(jButton2)
        .addContainerGap())
    );

    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Settings"));

    distanceAlgorithmSelector.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Euclidean", "Manhattan" }));

    jLabel1.setText("Distance Algorithm:");

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
      jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel5Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(distanceAlgorithmSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel1))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel5Layout.setVerticalGroup(
      jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel5Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(distanceAlgorithmSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(0, 0, Short.MAX_VALUE))
          .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel1.getAccessibleContext().setAccessibleName("dfg");
    jPanel1.getAccessibleContext().setAccessibleDescription("hgdf");

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void fingerprintingNNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fingerprintingNNActionPerformed
      m.setBaseTrace(m.getOfflineTrace());
      
      if (distanceAlgorithmSelector.getSelectedItem().toString().equals("Euclidean"))
        FingerprintingNN.run("FingerprintingNN_Euclidean", true, true);
      else
        FingerprintingNN.run("FingerprintingNN_Manhattan", false, true);        
    }//GEN-LAST:event_fingerprintingNNActionPerformed

    private void fingerprintingKNNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fingerprintingKNNActionPerformed
      m.setBaseTrace(m.getOfflineTrace());
      
      if (distanceAlgorithmSelector.getSelectedItem().toString().equals("Euclidean"))
        FingerprintingKNN.run("FingerprintingKNN_Euclidean", true, 3, true);
      else
        FingerprintingKNN.run("FingerprintingKNN_Manhattan", false, 3, true);
    }//GEN-LAST:event_fingerprintingKNNActionPerformed

    private void modelNNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelNNActionPerformed
      double n = 3.415;
      double pd0 = 33.07;  // Midlertidig!
      double d0 = 1.0;
      double waf = 0;
      int c = 0;
      
      if (this.waf.isSelected()){
        // DO SOMETHING HERE!
      }
      
      if (distanceAlgorithmSelector.getSelectedItem().toString().equals("Euclidean"))
        ModelNN.run("ModelNN_Euclidean", true, n, pd0, d0, waf, c, true);
      else
        ModelNN.run("ModelNN_Manhattan", false, n, pd0, d0, waf, c, true);
    }//GEN-LAST:event_modelNNActionPerformed

    private void modelKNNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelKNNActionPerformed
      double n = 3.415;
      double pd0 = 33.07;  // Midlertidig!
      double d0 = 1.0;
      double waf = 0;
      int c = 0;
      
      if (this.waf.isSelected()){
        // DO SOMETHING HERE!
      }
      
      if (distanceAlgorithmSelector.getSelectedItem().toString().equals("Euclidean"))
        ModelKNN.run("ModelKNN_Euclidean", true, 3, n, pd0, d0, waf, c, true);
      else
        ModelKNN.run("ModelKNN_Manhattan", false, 3, n, pd0, d0, waf, c, true);
    }//GEN-LAST:event_modelKNNActionPerformed

  private void estimateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estimateActionPerformed
    Evaluation.evaluate(true);
  }//GEN-LAST:event_estimateActionPerformed

  private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    JFileChooser openFile = new JFileChooser();
    openFile.setDialogTitle("Select the file you want to score!");
    openFile.setCurrentDirectory(new File("data"));
    
    if (openFile.showOpenDialog(jPanel1) == JFileChooser.APPROVE_OPTION){                                      
      JFileChooser saveFile = new JFileChooser();
      saveFile.setDialogTitle("Where to store the scored data?");
      saveFile.setCurrentDirectory(new File("data"));
    
      if (saveFile.showSaveDialog(jPanel1) == JFileChooser.APPROVE_OPTION){
        Score.scoreSvc(openFile.getSelectedFile(), ";", saveFile.getSelectedFile());
      }
    }
  }//GEN-LAST:event_jButton5ActionPerformed

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    m.setBaseTrace(m.getOfflineTrace());
    
    m.ConsoleWrite("Writing CDF Error for: FingerprintingKNN");
    if (distanceAlgorithmSelector.getSelectedItem().toString().equals("Euclidean"))
      FingerprintingKNN.runCDFError("FingerprintingKNN_Euclidean_CDFError", true, 3, 5, 100, true);
    else
      FingerprintingKNN.runCDFError("FingerprintingKNN_Manhattan_CDFError", false, 3, 5, 100, true);
        
    m.ConsoleWrite("Writing CDF Error for: FingerprintingNN");
    if (distanceAlgorithmSelector.getSelectedItem().toString().equals("Euclidean"))
      FingerprintingNN.runCDFError("FingerprintingNN_Euclidean_CDFError", true, 5, 100, true);
    else
      FingerprintingNN.runCDFError("FingerprintingNN_Manhattan_CDFError", false, 5, 100, true);
    
    double n = 3.415;
    double pd0 = 33.07;  // Midlertidig!
    double d0 = 1.0;
    double waf = 0;
    int c = 0;

    if (this.waf.isSelected()){
      // DO SOMETHING HERE!
    }
      
    m.ConsoleWrite("Writing CDF Error for: ModelKNN");
    if (distanceAlgorithmSelector.getSelectedItem().toString().equals("Euclidean"))
      ModelKNN.runCDFError("ModelKNN_Euclidean_CDFError", true, 3, 5, n, pd0, d0, waf, c, 100, true);
    else
      ModelKNN.runCDFError("ModelKNN_Manhattan_CDFError", false, 3, 5, n, pd0, d0, waf, c, 100, true);
        
    m.ConsoleWrite("Writing CDF Error for: ModelNN");
    if (distanceAlgorithmSelector.getSelectedItem().toString().equals("Euclidean"))
      ModelNN.runCDFError("ModelNN_Euclidean_CDFError", true, 5, n, pd0, d0, waf, c, 100, true);
    else
      ModelNN.runCDFError("ModelNN_Manhattan_CDFError", false, 5, n, pd0, d0, waf, c, 100, true);
  }//GEN-LAST:event_jButton1ActionPerformed

  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    m.setBaseTrace(m.getOfflineTrace());
    
    m.ConsoleWrite("Writing Median Avg -> 100 runs (k: 1 -> 5) for: FingerprintingKNN");
    if (distanceAlgorithmSelector.getSelectedItem().toString().equals("Euclidean"))
      FingerprintingKNN.runMedianAvg("FingerprintingKNN_Euclidean_MedianAvg", true, new int[]{ 1, 2, 3, 4, 5}, 100, true);
    else
      FingerprintingKNN.runMedianAvg("FingerprintingKNN_Manhattan_MedianAvg", true, new int[]{ 1, 2, 3, 4, 5}, 100, true);
    
    double n = 3.415;
    double pd0 = 33.07;  // Midlertidig!
    double d0 = 1.0;
    double waf = 0;
    int c = 0;

    if (this.waf.isSelected()){
      // DO SOMETHING HERE!
    }
                                         
    m.ConsoleWrite("Writing Median Avg -> 100 runs (k: 1 -> 5) for: ModelKNN");
    if (distanceAlgorithmSelector.getSelectedItem().toString().equals("Euclidean"))
      ModelKNN.runMedianAvg("ModelKNN_Euclidean_MedianAvg", true, new int[]{ 1, 2, 3, 4, 5}, n, pd0, d0, waf, c, 100, true);
    else
      ModelKNN.runMedianAvg("ModelKNN_Manhattan_MedianAvg", false, new int[]{ 1, 2, 3, 4, 5}, n, pd0, d0, waf, c, 100, true);
  }//GEN-LAST:event_jButton2ActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(EagleEye.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(EagleEye.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(EagleEye.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(EagleEye.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
          new EagleEye().setVisible(true);
      }
    });
  }
    
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextArea console;
  private javax.swing.JComboBox distanceAlgorithmSelector;
  private javax.swing.JButton estimate;
  private javax.swing.JButton fingerprintingKNN;
  private javax.swing.JButton fingerprintingNN;
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton2;
  private javax.swing.JButton jButton5;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JPanel jPanel5;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton modelKNN;
  private javax.swing.JButton modelNN;
  private javax.swing.JCheckBox waf;
  // End of variables declaration//GEN-END:variables
}
